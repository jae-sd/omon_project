<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Upload Your File</title>
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons+Outlined">
    <link rel="stylesheet" href="./upload.css">
</head>
<body>
    <div class="container">
        <div class="navbar">
            <span class="logo">LOGO</span>
            <div>

                <!-- make this dynamically add user id before navigation -->
                <div class="button">
                    <span class="status">
                        <a href="/status/?user=<%= userId %>">Status</a>
                    </span>
                </div>
                <div class="button">
                    <span class="logout">
                        <a href="/logout">Logout</a>
                    </span>
                </div>
            </div>
        </div>

        <div class="form-container">
            <div class="form-body">
                <div class="title">Upload Your Documents</div>
                <form action="/upload-multiple" method="POST" >
                    <div class="body">

                        <!-- firstname etc -->
                            <div>
                                <span>Firstname</span>
                                <input type="text" placeholder="firstname" name="fname" required>
                            </div>
                            <div>
                                <span>Surname</span>
                                <input type="text" placeholder="surname" name="sname" required>
                            </div>
                            <div>
                                <span>Lastname</span>
                                <input type="text" placeholder="lastname" name="lname" required>
                            </div>

                        <!-- utme etc -->
                            <div>
                                <span>Waec</span>
                                <input id="waec" type="file" accept="image/*" name="file" required>
                            </div>
                            <div>
                                <span>Neco</span>
                                <input id="neco" type="file" accept="image/*" name="file" required>
                            </div>
                            <div>
                                <span>Utme</span>
                                <input id="utme" type="file" accept="image/*" name="file" required>
                            </div>
                        
                        <!-- state etc -->
                            <div>
                                <span>Address</span>
                                <input type="text" placeholder="Salt Lake Avenue" name="address" required>
                            </div>
                            <div>
                                <span>State</span>
                                <input type="text" placeholder="Lagos" name="state" required>
                            </div>
                            <div>
                                <span>DOB</span>
                                <input type="date" placeholder="date of birth" name="dob" required>
                            </div>
                    </div>
                    <div class="btn">
                        <button type="submit">Upload</button>
                    </div>
                </form>
            </div>
        </div>
    </div>


    <script>
        'use strict'

        let form = document.querySelector('form')

        form.addEventListener('submit', async function(e) {
            e.preventDefault();
            
            
            // form body selectors
            let fname = form.fname.value;
            let sname = form.sname.value;
            let lname = form.lname.value;
            let state = form.state.value;
            let address = form.address.value;
            let dob = form.dob.value;

            // form file Selectors
            let waec = document.getElementById('waec');
            let neco = document.getElementById('neco');
            let utme = document.getElementById('utme');

            // cloudinary auth
            const api_key = "917878775246812"
            const cloud_name = "dxxswax97"

            const signatureResponse = await fetch("/get-signature", {
                method: "GET",
                headers: {
                    'content-type': 'application/json'
                }
            })

            let signatureData = await signatureResponse.json()
            console.log(signatureData)

            let waecFile = new FormData();
            waecFile.append('file', waec.files[0]);
            waecFile.append("api_key", api_key)
            waecFile.append("signature", signatureData.signature)
            waecFile.append("timestamp", signatureData.timestamp)


            let necoFile = new FormData();
            necoFile.append('file', neco.files[0]);
            necoFile.append("api_key", api_key)
            necoFile.append("signature", signatureData.signature)
            necoFile.append("timestamp", signatureData.timestamp)


            let utmeFile = new FormData();
            utmeFile.append('file', utme.files[0]);
            utmeFile.append("api_key", api_key)
            utmeFile.append("signature", signatureData.signature)
            utmeFile.append("timestamp", signatureData.timestamp)


            let data = new FormData();
            data.append("firstname", fname)
            data.append("surname", sname)
            data.append("lastname", lname)
            data.append("state", state)
            data.append("address", address)
            data.append("dob", dob)


            let profile = {}
            let pro = data.forEach((value, element) => {
                profile[element] = value
            })

            const uploadWaec = async (payload) => {
                const req = await fetch(`https://api.cloudinary.com/v1_1/${cloud_name}/auto/upload`, {
                method: "POST",
                body: payload
                });

                return req.json()
            }

            const uploadNeco = async (payload) => {
                const req = await fetch(`https://api.cloudinary.com/v1_1/${cloud_name}/auto/upload`, {
                method: "POST",
                body: payload
                });

                return req.json()
            }

            const uploadUtme = async (payload) => {
                const req = await fetch(`https://api.cloudinary.com/v1_1/${cloud_name}/auto/upload`, {
                method: "POST",
                body: payload
                });

                return req.json()
            }



            const haveBeenUploaded = async () => {
                let waecResponse = uploadWaec(waecFile)
                let necoResponse = uploadNeco(necoFile)
                let utmeResponse = uploadUtme(utmeFile)

                let [waec, neco, utme] = await Promise.all([waecResponse, necoResponse, utmeResponse])

                let fileData = [
                    {
                        id: "waec",
                        public_id: waec.public_id,
                        signature: waec.signature
                    },
                    {
                        id: "neco",
                        public_id: neco.public_id,
                        signature: neco.signature
                    },
                    {
                        id: "utme",
                        public_id: utme.public_id,
                        signature: utme.signature
                    }
                ] 
                
                return fileData

            }


            let uploadRequest = await fetch("/upload-multiple", {
                'credentials': 'include',
                method: "POST",
                body: JSON.stringify({ profile, files: await haveBeenUploaded()}),
                headers: {
                    'content-type': 'application/json'
                }
            })

            let res = await uploadRequest.json()
            return uploadRequest.status === 200 ? location.assign(`/status/?user=${res.id}`) : console.log(res.message)

        })


    </script>

</body>
</html>